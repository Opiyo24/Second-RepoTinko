To add a web page to an application:
    1. views.py
        Create a fucntion rendering the web page

    2. Templates/subdirectory
        Create a html template with the contents to render
    
    3. urls.py
        Add the indended url in the list of urls (path)


BLOG views
- Created dummy data - a list of dictionaries
- home views
    context (dictionary)
- Pass context as third argument to home function.


ADMIN PAGE 
$ python manage.py createsuperuser (Database has te have been created.)
    - Run a few migration commands
    - First migration creates a database and a couple of default tables

$ python manage.py makemigrations
$ python manage.py migrate (Runs migrations)
$ python manage.py createsuperuser
    -> Enter username ###Opiyo
    -> Email address  ###gabbynyangor@gmail.com
    -> Password (confirm) ###djangoproject




Models.py
    - Creating databases
    - Each class is a database table Models
    - Class attributes are table columns

    $python manage.py makemigrations
    $ python manage.py sqlmigrate blog 0001
        -> Shows SQL code generated after migration.


    To run Django shell

    $python manage.py shell


USER RESGISTRATION
    - Create a new app
    $ python manage.py startapp 'name'

    - Creating user registration form.
        There exist libraries for form creation.
        - Created in form of classes

        # from django.contrib.auth.forms import UserCreationForm
        #form = UserCreationForm()
        -Create html template for the form, most is done fo ryou
            Register.html

                {{ form.as_p }} - Renders form as paragraph
        - Include the path to project/urls.py
            - IMport form class
                from users import views as user_views
            
            - Add path to list of paths
                urlpatterns = [
                    path('admin/', admin.site.urls),
    --->            path('register/', user_views.register, name='register'),
                    path('', include('blog.urls')),
                ]


SENDING FLASH MESSAGESS
messages.debug
messages.info
messages.success
messages.warning
messages.error



    from django.contrib import messages

    messages.success(request, f"Account  reated for {username}!")

- Include flash messages in base.html to show on anty page
- Insert flash message content above block content jinja tags

        {% if messages %}
            {% for message in messages %}
                <div class="alert alert-{{ message.tags }}">
                    {{ message }}
                </div>
            {% endfor %}
        {% endif %}
        {% block content %}{% endblock %}

                ## message.tags - placeholder to accommodate any type of flash message
                ## message - variable holding message specified for the specific message tag in use.


REDIRECTION
- Import redirect beside render
    from django.shortcuts import render, redirect



    return redirect('blog-home') --> Name given to specific web page


#######RESIZE IMAGES
package called pillow
override the save method of profile.

    def save(self):
        super().save()
        #Resize image
        img = Image.open(self.image.path)

        if img.height > 300 or img.width > 300:
            output_size = (300, 300)
            img.thumbnail(output_size)
            img.save(self.image.path)